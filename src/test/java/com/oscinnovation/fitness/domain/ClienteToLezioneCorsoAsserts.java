package com.oscinnovation.fitness.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ClienteToLezioneCorsoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteToLezioneCorsoAllPropertiesEquals(ClienteToLezioneCorso expected, ClienteToLezioneCorso actual) {
        assertClienteToLezioneCorsoAutoGeneratedPropertiesEquals(expected, actual);
        assertClienteToLezioneCorsoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteToLezioneCorsoAllUpdatablePropertiesEquals(
        ClienteToLezioneCorso expected,
        ClienteToLezioneCorso actual
    ) {
        assertClienteToLezioneCorsoUpdatableFieldsEquals(expected, actual);
        assertClienteToLezioneCorsoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteToLezioneCorsoAutoGeneratedPropertiesEquals(
        ClienteToLezioneCorso expected,
        ClienteToLezioneCorso actual
    ) {
        assertThat(expected)
            .as("Verify ClienteToLezioneCorso auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteToLezioneCorsoUpdatableFieldsEquals(ClienteToLezioneCorso expected, ClienteToLezioneCorso actual) {
        assertThat(expected)
            .as("Verify ClienteToLezioneCorso relevant properties")
            .satisfies(e -> assertThat(e.getCompletato()).as("check completato").isEqualTo(actual.getCompletato()))
            .satisfies(e -> assertThat(e.getDataCompletamento()).as("check dataCompletamento").isEqualTo(actual.getDataCompletamento()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertClienteToLezioneCorsoUpdatableRelationshipsEquals(
        ClienteToLezioneCorso expected,
        ClienteToLezioneCorso actual
    ) {
        assertThat(expected)
            .as("Verify ClienteToLezioneCorso relationships")
            .satisfies(e -> assertThat(e.getCliente()).as("check cliente").isEqualTo(actual.getCliente()))
            .satisfies(e -> assertThat(e.getLezioneCorso()).as("check lezioneCorso").isEqualTo(actual.getLezioneCorso()));
    }
}
