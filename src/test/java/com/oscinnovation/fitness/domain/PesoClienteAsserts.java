package com.oscinnovation.fitness.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PesoClienteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPesoClienteAllPropertiesEquals(PesoCliente expected, PesoCliente actual) {
        assertPesoClienteAutoGeneratedPropertiesEquals(expected, actual);
        assertPesoClienteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPesoClienteAllUpdatablePropertiesEquals(PesoCliente expected, PesoCliente actual) {
        assertPesoClienteUpdatableFieldsEquals(expected, actual);
        assertPesoClienteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPesoClienteAutoGeneratedPropertiesEquals(PesoCliente expected, PesoCliente actual) {
        assertThat(expected)
            .as("Verify PesoCliente auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPesoClienteUpdatableFieldsEquals(PesoCliente expected, PesoCliente actual) {
        assertThat(expected)
            .as("Verify PesoCliente relevant properties")
            .satisfies(e -> assertThat(e.getPeso()).as("check peso").isEqualTo(actual.getPeso()))
            .satisfies(e -> assertThat(e.getMese()).as("check mese").isEqualTo(actual.getMese()))
            .satisfies(e -> assertThat(e.getDataInserimento()).as("check dataInserimento").isEqualTo(actual.getDataInserimento()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPesoClienteUpdatableRelationshipsEquals(PesoCliente expected, PesoCliente actual) {
        assertThat(expected)
            .as("Verify PesoCliente relationships")
            .satisfies(e -> assertThat(e.getCliente()).as("check cliente").isEqualTo(actual.getCliente()));
    }
}
