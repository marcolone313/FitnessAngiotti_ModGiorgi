package com.oscinnovation.fitness.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AllenamentoGiornalieroAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAllenamentoGiornalieroAllPropertiesEquals(AllenamentoGiornaliero expected, AllenamentoGiornaliero actual) {
        assertAllenamentoGiornalieroAutoGeneratedPropertiesEquals(expected, actual);
        assertAllenamentoGiornalieroAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAllenamentoGiornalieroAllUpdatablePropertiesEquals(
        AllenamentoGiornaliero expected,
        AllenamentoGiornaliero actual
    ) {
        assertAllenamentoGiornalieroUpdatableFieldsEquals(expected, actual);
        assertAllenamentoGiornalieroUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAllenamentoGiornalieroAutoGeneratedPropertiesEquals(
        AllenamentoGiornaliero expected,
        AllenamentoGiornaliero actual
    ) {
        assertThat(expected)
            .as("Verify AllenamentoGiornaliero auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAllenamentoGiornalieroUpdatableFieldsEquals(AllenamentoGiornaliero expected, AllenamentoGiornaliero actual) {
        assertThat(expected)
            .as("Verify AllenamentoGiornaliero relevant properties")
            .satisfies(e -> assertThat(e.getTipo()).as("check tipo").isEqualTo(actual.getTipo()))
            .satisfies(e -> assertThat(e.getGiorno()).as("check giorno").isEqualTo(actual.getGiorno()))
            .satisfies(e -> assertThat(e.getNotaTrainer()).as("check notaTrainer").isEqualTo(actual.getNotaTrainer()))
            .satisfies(e -> assertThat(e.getSvolto()).as("check svolto").isEqualTo(actual.getSvolto()))
            .satisfies(e -> assertThat(e.getDataAllenamento()).as("check dataAllenamento").isEqualTo(actual.getDataAllenamento()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAllenamentoGiornalieroUpdatableRelationshipsEquals(
        AllenamentoGiornaliero expected,
        AllenamentoGiornaliero actual
    ) {
        assertThat(expected)
            .as("Verify AllenamentoGiornaliero relationships")
            .satisfies(e -> assertThat(e.getSchedaSettimanale()).as("check schedaSettimanale").isEqualTo(actual.getSchedaSettimanale()));
    }
}
