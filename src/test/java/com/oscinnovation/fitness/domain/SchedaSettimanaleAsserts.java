package com.oscinnovation.fitness.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SchedaSettimanaleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchedaSettimanaleAllPropertiesEquals(SchedaSettimanale expected, SchedaSettimanale actual) {
        assertSchedaSettimanaleAutoGeneratedPropertiesEquals(expected, actual);
        assertSchedaSettimanaleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchedaSettimanaleAllUpdatablePropertiesEquals(SchedaSettimanale expected, SchedaSettimanale actual) {
        assertSchedaSettimanaleUpdatableFieldsEquals(expected, actual);
        assertSchedaSettimanaleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchedaSettimanaleAutoGeneratedPropertiesEquals(SchedaSettimanale expected, SchedaSettimanale actual) {
        assertThat(expected)
            .as("Verify SchedaSettimanale auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchedaSettimanaleUpdatableFieldsEquals(SchedaSettimanale expected, SchedaSettimanale actual) {
        assertThat(expected)
            .as("Verify SchedaSettimanale relevant properties")
            .satisfies(e -> assertThat(e.getAnno()).as("check anno").isEqualTo(actual.getAnno()))
            .satisfies(e -> assertThat(e.getMese()).as("check mese").isEqualTo(actual.getMese()))
            .satisfies(e -> assertThat(e.getSettimana()).as("check settimana").isEqualTo(actual.getSettimana()))
            .satisfies(e -> assertThat(e.getDataCreazione()).as("check dataCreazione").isEqualTo(actual.getDataCreazione()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSchedaSettimanaleUpdatableRelationshipsEquals(SchedaSettimanale expected, SchedaSettimanale actual) {
        assertThat(expected)
            .as("Verify SchedaSettimanale relationships")
            .satisfies(e -> assertThat(e.getCliente()).as("check cliente").isEqualTo(actual.getCliente()));
    }
}
